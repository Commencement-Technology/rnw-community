import { isDefined } from '@rnw-community/shared';

import { WebSelectorConfig } from '../config';

import { Platform } from './get-platform.util';

import type { AndroidTestIDProps, TestIDProps, WebTestIDProps } from '../interface';

const isWebTestIDProps = (props: AndroidTestIDProps | TestIDProps | WebTestIDProps): props is WebTestIDProps =>
    WebSelectorConfig in props && isDefined(props[WebSelectorConfig]);

/**
 * Read testID field from platform specific TestID props generated by setTestID
 *
 * @see setTestID
 *
 * @params {AndroidTestIDProps | TestIDProps | WebTestIDProps} Props object
 * @returns TestID object field
 */
export const getTestId = (props: AndroidTestIDProps | TestIDProps | WebTestIDProps): string => {
    if (Platform.OS === 'web' && isWebTestIDProps(props)) {
        return props[WebSelectorConfig];
    }

    return props.testID;
};
